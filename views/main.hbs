<!DOCTYPE html>
<html lang="en">

    <head>
        <meta charset="UTF-8" />
        <meta name="viewport"
              content="width=device-width, initial-scale=1.0" />
        <title>{{space_name}}</title>
        <link rel="stylesheet"
              type="text/css"
              href="/styles.css" />
        <link rel="icon"
              href="/images/favicon.ico?"
              type="image/x-icon" />
    </head>

    <body>
        <h1>Welcome to space {{space_name}}!</h1>
        <form id="spaceForm">
            <textarea id="longText"
                      name="longText"
                      rows="10"
                      cols="50"></textarea><br />
            <input type="hidden"
                   id="userId"
                   name="userId"
                   value="1"> <!-- Placeholder userId -->
            <button type="submit"
                    id="post-button">Post</button>
        </form>

        <div id="chatContainer">
            <div id="postsContainer">
                <!-- Posts will be loaded here -->
            </div>
        </div>

        <script>
            document.addEventListener("DOMContentLoaded", function () {
                const spaceName = "{{space_name}}";
                const userId = document.getElementById("userId").value;

                function fetchPosts() {
                    fetch(`/${spaceName}/posts`)
                        .then(response => response.json())
                        .then(data => {
                            const postsContainer = document.getElementById("postsContainer");
                            if (data.posts.length === 0) {
                                postsContainer.innerHTML = "<p>No posts here yet!</p>";
                            } else {
                                postsContainer.innerHTML = data.posts.map(post => `
                                    <div class="post">
                                        <p>${post.content}</p>
                                    </div>
                                `).join('');
                                postsContainer.scrollTop = postsContainer.scrollHeight; // Scroll to the bottom
                            }
                        })
                        .catch(error => {
                            console.error("Error fetching posts:", error);
                        });
                }

                fetchPosts();

                document.getElementById("longText").addEventListener("keydown", function (event) {
                    if (event.key === "Enter" && !event.shiftKey) {
                        event.preventDefault();
                        document.getElementById("spaceForm").dispatchEvent(new Event("submit"));
                    }
                });

                document.getElementById("spaceForm").addEventListener("submit", function (event) {
                    event.preventDefault();
                    const longText = document.getElementById("longText").value;

                    fetch(`/${spaceName}/posts`, {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({longText, userId})
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.message === "Post created successfully") {
                                fetchPosts(); // Refresh the posts after successful submission
                                document.getElementById("spaceForm").reset();
                            } else {
                                console.error("Error posting:", data.error);
                            }
                        })
                        .catch(error => {
                            console.error("Error posting:", error);
                        });
                });
            });
        </script>
    </body>

</html>